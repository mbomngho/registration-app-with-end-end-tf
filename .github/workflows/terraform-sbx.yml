name: "Terraform Deployment to sbx"

on:
  workflow_dispatch:
  push:
    paths:
      - '*/**'
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [deployment-server-for-sbx]

    env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_DEFAULT_REGION: us-east-1
    steps:
    - uses: actions/checkout@v1
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
          version: 1.1.5
          args: '-var-file="prod.tfvars"'
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
          
    - name: Terraform Init
      id: init
      run: |
        rm -rf .terraform
        terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color   

    - name: Terraform Plan
      id: plan
      run: |
        terraform workspace select sbx
        terraform plan -var-file="sbx.tfvars"  -out="plan.sbx" 
      continue-on-error: true  

    - name: Terraform Destroy
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      id: Destroy
      run: |
        terraform destroy -var-file="sbx.tfvars" -auto-approve
        
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })        
